fivepatterns
patterns=[x1; x2; x3; x4; x5;];
N = size(patterns,2);
patterns = transpose(patterns);
w=0;
for i = 1:size(patterns,2)
  w = w + mtimes(patterns(:,i),transpose(patterns(:,i)));
end
w = w-diag(diag(w));
w = w/N;
testPatterns = [ [[1, 1, 1, -1, -1, 1, -1, 1, 1, -1], [1, 1, 1, -1, -1, 1, -1, 1, 1, -1], [1, 1, 1, -1, -1, 1, -1, 1, 1, -1], [1, 1, 1, -1, -1, 1, -1, 1, 1, -1], [1, 1, 1, -1, -1, 1, -1, 1, 1, -1], [1, 1, 1, -1, -1, 1, -1, 1, 1, -1], [1, 1, 1, -1, -1, 1, -1, 1, 1, -1], [1, 1, 1, 1, 1, -1, 1, 1, 1, -1], [1, 1, 1, 1, 1, -1, 1, 1, 1, -1], [1, -1, -1, -1, -1, 1, -1, 1, 1, -1], [1, -1, -1, -1, -1, 1, -1, 1, 1, -1], [1, -1, -1, -1, -1, 1, -1, 1, 1, -1], [1, -1, -1, -1, -1, 1, -1, 1, 1, -1], [1, -1, -1, -1, -1, 1, -1, 1, 1, -1], [1, -1, -1, -1, -1, 1, -1, 1, 1, -1], [1, -1, -1, -1, -1, 1, -1, 1, 1, -1]],
                  [[1, -1, -1, -1, -1, 1, -1, -1, -1, -1], [1, -1, -1, 1, 1, -1, 1, -1, -1, -1], [1, -1, 1, 1, 1, -1, 1, 1, -1, -1], [1, 1, 1, 1, -1, 1, 1, 1, 1, -1], [1, 1, 1, 1, -1, 1, 1, 1, 1, -1], [1, 1, 1, 1, -1, 1, 1, 1, 1, -1], [1, 1, 1, 1, -1, 1, 1, 1, 1, -1], [1, 1, 1, 1, -1, 1, 1, 1, 1, -1], [1, 1, 1, 1, -1, 1, 1, 1, 1, -1], [1, 1, 1, 1, -1, 1, 1, 1, 1, -1], [1, 1, 1, 1, -1, 1, 1, 1, 1, -1], [1, 1, 1, 1, -1, 1, 1, 1, 1, -1], [1, 1, 1, 1, -1, 1, 1, 1, 1, -1], [1, -1, 1, 1, 1, -1, 1, 1, -1, -1], [1, -1, -1, 1, 1, -1, 1, -1, -1, -1], [1, -1, -1, -1, -1, 1, -1, -1, -1, -1]],
                  [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [-1, -1, -1, 1, 1, 1, 1, -1, -1, -1], [-1, -1, 1, 1, 1, 1, 1, 1, -1, -1], [-1, 1, 1, 1, -1, -1, 1, 1, 1, -1], [-1, 1, 1, 1, -1, -1, 1, 1, 1, -1], [-1, 1, 1, 1, -1, -1, 1, 1, 1, -1], [-1, 1, 1, 1, -1, -1, 1, 1, 1, -1], [-1, 1, 1, 1, -1, -1, 1, 1, 1, -1], [-1, 1, 1, 1, -1, -1, 1, 1, 1, -1], [-1, 1, 1, 1, -1, -1, 1, 1, 1, -1], [-1, 1, 1, 1, -1, -1, 1, 1, 1, -1], [-1, 1, 1, 1, -1, -1, 1, 1, 1, -1], [-1, 1, 1, 1, -1, -1, 1, 1, 1, -1], [-1, -1, 1, 1, 1, 1, 1, 1, -1, -1], [-1, -1, -1, 1, 1, 1, 1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1]]
                ];
testPatternsOutput = zeros(3,N);
flag = 0;
for l = 1:3
  x_test = testPatterns(l,:);
  T = 100;
  for j = 1:T
    if flag == 1
      flag = 0;
      break
    end
    for k = 1:N
      if flag == 1
        break
      end
      b = w*transpose(x_test);
      x_test(k) = sign(b(k));
    end
    for i=1:size(patterns,2) % tsekare to i gtxs
      if transpose(x_test)==patterns(:,i)
        fprintf('It converges to pattern %d.\n', i);
        testPatternsOutput(l,:)=transpose(patterns(:,i));
        flag=1;
        break
      elseif transpose(x_test)==flip(patterns(:,i))
        fprintf('It converges to pattern %d.\n', -i);
        testPatternsOutput(l,:)=transpose(patterns(:,i));
        flag=1;
        break
      else
        flag = 2;
      end
    end
  end
  if flag == 2
    fprintf('It converges to none of the patterns\n');
    testPatternsOutput(l,:)=x_test;
  end
end